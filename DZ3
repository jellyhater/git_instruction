# Подготовка к работе с Git 
1. Git нужно установить, воспользовавшись ссылкой https://git-scm.com/downloads
2. Устанавливаем VS
3. В VS, нужно создать новую папку которую будет отслеживать GIT. 
4. Необходимо добавить терманал внутри редактора
## Непосредственное управление основными командами Git   
### Чтобы GIT начал работать пользователя нужно инициолизировать
1. Используем  комманду - git config --global user.name <Ваше имя>
2. Вводим команду - git config --global user.email <указываекм Ваш email>
3. Вводим комманду - git init для инициалазации работы в указанной папки и создания репозитория отслеживания изменений
4. Внутри папки необходимо задать отслеживаемые файлы если они созданы. Для этого необходимо воспользоваться коммандой - git add <имя файла>.<расширение файла>
5.После  начала отслеживания, пользователь с помошью комманды git commit -a -m  "текст комментария" поручает программе вести учет и контроль версий создаваемого проекта
6. комманда git log позволяет выводить журнал изменений на основе введным пользователем комментариев 
7.  комманда git diff позволяет отслеживать изменения между версиями файлов


### Второе практическое задание 
<Продолжить работу с файлом, начатую на Семинаре 1. Создать и слить как минимум 4 ветки. Обязательно создать конфликт и разрешить его. Архив с репозиторием и проделанной работой приложить к уроку.>
1. Создадим с помощью  комманды branch 4 разные ветки которые в дальнейшем будем наполнять различными данными которые могут конфликтовать
2. Введем соответствующие команды git branch branch1 , git branch branch2, git branch branch3, git branch branch1
3. с помощью комманды git branch просмотри коталог созданых веток
4. для слияния веток возмем произвольный тест, разобьем его 4 части для дальнейшего слияния, при этом исказим текст в 1-3 ветках, чтобы слить их между собой. Четвертую ветку примем за эталом и сольем ее в мастера.При этом с помощью комманды git branch -d  удаляем слитые ветки
5.Сохраним проект
6.Отправим на проверку
### Введем текст

<Когнитивное развитие (от англ. Cognitive development) — развитие всех видов мыслительных процессов, таких как восприятие, память, формирование понятий, решение задач, воображение и логика. Теория когнитивного развития была разработана швейцарским философом и психологом Жаном Пиаже. Его эпистемологическая теория дала множество основных понятий в области психологии развития и исследует рост разумности, которая, по Пиаже, означает способность более точно отражать окружающий мир и выполнять логические операции над образами концепций, возникающих во взаимодействии с окружающим миром. Теория рассматривает появление и построение схем — схем того как воспринимается мир — в «стадии развития», времени когда дети получают новые способы представления информации в мозге. Теория считается «конструктивистской», в том смысле, что, в отличие от нативистских теорий (которые описывают когнитивное развитие как разворачивание врождённых знаний и способностей) или эмпирических теорий (которые описывают когнитивное развитие как постепенное приобретение знания через опыт), она утверждает, что мы самостоятельно конструируем наши когнитивные способности с помощью собственных действий в окружающей среде.>
  
### Третье практическое задание 

<Дополнить файл с инструкцией по работе с git (второе домашнее задание) и направить pull request в репозиторий преподавателя. https://github.com/cornhater/git_instruction

Файл с инструкцией необходимо дополнить информацией о работе с удаленными репозиториями.
В системе подгрузить скриншот отправленного pull request.>

1. Зарегестрируемся на сайте GitHub
2. Делаем fork из https://github.com/cornhater/git_instruction.git
3. Создаем новую ветку в которой мы создадим новый файл  
4. В новый файл копируем инструкции из второго урока, после чего дополняем инсткурцией к третьему уроку
5. Сохроним изменения в файл с помошью gid add и оставим комментарий о выполнении задания
6. Отправляем в свой репазиторий изменную инструкцию
7. Направляем pull request в репазиторий откуда был скачен исходный 

## Инструкция готова к отправке 